body {
    background-color: #fff;
    color: #333;
    margin: 0;
    font: 1.2em / 1.2 Arial, Helvetica, sans-serif;
  }

  img {
      max-width: 100%;
      display: block;
  }

  .logo {
    font-size: 200%;
    padding: 50px 20px;
    margin: 0 auto;
    max-width: 980px;
  }

  .grid {
    margin: 0 auto;
    padding: 0 20px;
    max-width: 980px;
  }

  nav {
    background-color: #000;
    padding: .5em;
  }

  nav ul {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  nav a {
    color: #fff;
    text-decoration: none;
    padding: .5em 1em;
  }

  .photos {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .feature {
      width: 200px;
  }

  footer {
    background: coral;
    text-align: center;
    margin-top: 40px;
    padding:1px;
  }
  /* flexbox below here for navbar w/ stick position  */

  nav {
    position:sticky; /*makes nav bar scroll with content and stick to top of viewport when reached */
    top: 0px;
    margin-top: 0;
    background: blue;
    padding: 10px;
    display: flex;
    justify-content: center;
  }
  .navBar {
    display: flex;
    flex-direction: row;
  }

  .navBar li {
    display: flex;
    align-items: center;
    justify-content: center;

  }

  /* The navigation bar should scroll with the content and then become stuck at the top of the viewport when it reaches it. Q: How to apply positioning to a<> inside div without disrupting its contents?*/
  /*For some reason putting it in with the flexbox (above) content worked, perhaps conflict with using another nav? */

  /* The image (first) that is inside the article should have text wrapped around it. */

  .feature {
  float:left;
  margin: 15px;
}

/*The <article> and <aside> elements should display as a two column layout. The columns should be a flexible size so that if the browser window shrinks smaller the columns become narrower.*/

.grid {
  display: grid;
  grid-template-columns: 2fr 1fr;
  grid-gap: 20px;
  gap: 20px;
}

/* The photographs should display as a two column grid with a 1 pixel gap between the images. */

aside{
  column-count: 2;
  grid-gap: 1px;
}

h2{
  column-span: all
}

/*reponsive*/

@media(max-width:600px){
  article{
    width: 100%;
    float: none;
  }

  aside{
    width: 100%;
    float: none;
  }
}
